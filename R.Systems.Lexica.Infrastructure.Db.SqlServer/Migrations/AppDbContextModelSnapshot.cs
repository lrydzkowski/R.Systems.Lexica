// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using R.Systems.Lexica.Infrastructure.Db.SqlServer;

#nullable disable

namespace R.Systems.Lexica.Infrastructure.Db.SqlServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("R.Systems.Lexica.Infrastructure.Db.SqlServer.Common.Entities.SetEntity", b =>
                {
                    b.Property<long>("SetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("set_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SetId"));

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name");

                    b.HasKey("SetId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("set", (string)null);
                });

            modelBuilder.Entity("R.Systems.Lexica.Infrastructure.Db.SqlServer.Common.Entities.SetWordEntity", b =>
                {
                    b.Property<long>("SetId")
                        .HasColumnType("bigint")
                        .HasColumnName("set_id");

                    b.Property<long>("WordId")
                        .HasColumnType("bigint")
                        .HasColumnName("word_id");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("order");

                    b.HasKey("SetId", "WordId");

                    b.HasIndex("WordId");

                    b.ToTable("set_word", (string)null);
                });

            modelBuilder.Entity("R.Systems.Lexica.Infrastructure.Db.SqlServer.Common.Entities.TranslationEntity", b =>
                {
                    b.Property<long>("TranslationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("translation_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TranslationId"));

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("translation");

                    b.HasKey("TranslationId");

                    b.ToTable("translation", (string)null);
                });

            modelBuilder.Entity("R.Systems.Lexica.Infrastructure.Db.SqlServer.Common.Entities.WordEntity", b =>
                {
                    b.Property<long>("WordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("word_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("WordId"));

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("word");

                    b.Property<int>("WordTypeId")
                        .HasColumnType("int")
                        .HasColumnName("word_type_id");

                    b.HasKey("WordId");

                    b.HasIndex("WordTypeId");

                    b.ToTable("word", (string)null);
                });

            modelBuilder.Entity("R.Systems.Lexica.Infrastructure.Db.SqlServer.Common.Entities.WordTypeEntity", b =>
                {
                    b.Property<int>("WordTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("word_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WordTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name");

                    b.HasKey("WordTypeId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("word_type", (string)null);

                    b.HasData(
                        new
                        {
                            WordTypeId = 1,
                            Name = "None"
                        },
                        new
                        {
                            WordTypeId = 2,
                            Name = "Noun"
                        },
                        new
                        {
                            WordTypeId = 3,
                            Name = "Verb"
                        },
                        new
                        {
                            WordTypeId = 4,
                            Name = "Adjective"
                        },
                        new
                        {
                            WordTypeId = 5,
                            Name = "Adverb"
                        });
                });

            modelBuilder.Entity("word_translation", b =>
                {
                    b.Property<long>("translation_id")
                        .HasColumnType("bigint");

                    b.Property<long>("word_id")
                        .HasColumnType("bigint");

                    b.HasKey("translation_id", "word_id");

                    b.HasIndex("word_id");

                    b.ToTable("word_translation", (string)null);
                });

            modelBuilder.Entity("R.Systems.Lexica.Infrastructure.Db.SqlServer.Common.Entities.SetWordEntity", b =>
                {
                    b.HasOne("R.Systems.Lexica.Infrastructure.Db.SqlServer.Common.Entities.SetEntity", "Set")
                        .WithMany("SetWords")
                        .HasForeignKey("SetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("R.Systems.Lexica.Infrastructure.Db.SqlServer.Common.Entities.WordEntity", "Word")
                        .WithMany("SetWords")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Set");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("R.Systems.Lexica.Infrastructure.Db.SqlServer.Common.Entities.WordEntity", b =>
                {
                    b.HasOne("R.Systems.Lexica.Infrastructure.Db.SqlServer.Common.Entities.WordTypeEntity", "WordType")
                        .WithMany("Words")
                        .HasForeignKey("WordTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WordType");
                });

            modelBuilder.Entity("word_translation", b =>
                {
                    b.HasOne("R.Systems.Lexica.Infrastructure.Db.SqlServer.Common.Entities.TranslationEntity", null)
                        .WithMany()
                        .HasForeignKey("translation_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("R.Systems.Lexica.Infrastructure.Db.SqlServer.Common.Entities.WordEntity", null)
                        .WithMany()
                        .HasForeignKey("word_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("R.Systems.Lexica.Infrastructure.Db.SqlServer.Common.Entities.SetEntity", b =>
                {
                    b.Navigation("SetWords");
                });

            modelBuilder.Entity("R.Systems.Lexica.Infrastructure.Db.SqlServer.Common.Entities.WordEntity", b =>
                {
                    b.Navigation("SetWords");
                });

            modelBuilder.Entity("R.Systems.Lexica.Infrastructure.Db.SqlServer.Common.Entities.WordTypeEntity", b =>
                {
                    b.Navigation("Words");
                });
#pragma warning restore 612, 618
        }
    }
}
