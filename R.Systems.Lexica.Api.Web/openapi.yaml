openapi: 3.0.1
info:
  title: R.Systems.Lexica.Api.Web
  version: '1.0'
paths:
  /:
    get:
      tags:
        - App
      summary: Get basic information about application
      responses:
        '422':
          description: Unprocessable Content
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: Internal Server Error
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppInfoResponse'
  '/recordings/{word}':
    get:
      tags:
        - Recordings
      summary: Get recording
      parameters:
        - name: word
          in: path
          required: true
          schema:
            type: string
        - name: wordType
          in: query
          schema:
            type: string
      responses:
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Content
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: Internal Server Error
        '200':
          description: Correct response
          content:
            audio/mpeg:
              schema:
                type: string
                format: byte
  /sets:
    get:
      tags:
        - Sets
      summary: Get sets
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: sortingFieldName
          in: query
          schema:
            type: string
        - name: sortingOrder
          in: query
          schema:
            type: string
        - name: searchQuery
          in: query
          schema:
            type: string
      responses:
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Content
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: Internal Server Error
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetRecordDtoListInfo'
    post:
      tags:
        - Sets
      summary: Create set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSetRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSetRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateSetRequest'
      responses:
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Content
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: Internal Server Error
        '201':
          description: Set created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreateSetResult'
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSetResult'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateSetResult'
    put:
      tags:
        - Sets
      summary: Update set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSetRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateSetRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateSetRequest'
      responses:
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Content
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: Internal Server Error
        '204':
          description: Set updated
  '/sets/{setId}':
    get:
      tags:
        - Sets
      summary: Get set
      parameters:
        - name: setId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Content
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: Internal Server Error
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetDto'
        '404':
          description: Not Found
    delete:
      tags:
        - Sets
      summary: Delete set
      parameters:
        - name: setId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Content
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: Internal Server Error
        '204':
          description: Set deleted
  '/words/{word}/definitions':
    get:
      tags:
        - Words
      summary: Get word definitions
      parameters:
        - name: word
          in: path
          required: true
          schema:
            type: string
      responses:
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Content
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: Internal Server Error
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Definition'
components:
  schemas:
    CreateSetEntryRequest:
      type: object
      properties:
        word:
          type: string
          nullable: true
        wordType:
          type: string
          nullable: true
        translations:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    CreateSetRequest:
      type: object
      properties:
        setName:
          type: string
          nullable: true
        entries:
          type: array
          items:
            $ref: '#/components/schemas/CreateSetEntryRequest'
          nullable: true
      additionalProperties: false
    CreateSetResult:
      type: object
      properties:
        setId:
          type: integer
          format: int64
      additionalProperties: false
    Definition:
      type: object
      properties:
        word:
          type: string
          nullable: true
        text:
          type: string
          nullable: true
        exampleUses:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    EntryDto:
      type: object
      properties:
        word:
          type: string
          nullable: true
        wordType:
          type: string
          nullable: true
        translations:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ErrorInfo:
      type: object
      properties:
        propertyName:
          type: string
          nullable: true
        errorMessage:
          type: string
          nullable: true
        attemptedValue:
          nullable: true
        errorCode:
          type: string
          nullable: true
      additionalProperties: false
    GetAppInfoResponse:
      type: object
      properties:
        appName:
          type: string
          nullable: true
        appVersion:
          type: string
          nullable: true
      additionalProperties: false
    SetDto:
      type: object
      properties:
        setId:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        entries:
          type: array
          items:
            $ref: '#/components/schemas/EntryDto'
          nullable: true
        createdAt:
          type: string
          format: date-time
      additionalProperties: false
    SetRecordDto:
      type: object
      properties:
        setId:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
      additionalProperties: false
    SetRecordDtoListInfo:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/SetRecordDto'
          nullable: true
      additionalProperties: false
    UpdateSetEntryRequest:
      type: object
      properties:
        word:
          type: string
          nullable: true
        wordType:
          type: string
          nullable: true
        translations:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    UpdateSetRequest:
      type: object
      properties:
        setId:
          type: integer
          format: int64
        setName:
          type: string
          nullable: true
        entries:
          type: array
          items:
            $ref: '#/components/schemas/UpdateSetEntryRequest'
          nullable: true
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: http
      description: Please enter token
      scheme: bearer
      bearerFormat: JWT
security:
  - Bearer: [ ]